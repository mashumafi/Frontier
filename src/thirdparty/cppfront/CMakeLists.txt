INCLUDE(FetchContent)

FetchContent_Declare(
    cppfront
    GIT_REPOSITORY https://github.com/hsutter/cppfront
    GIT_TAG        b81c80f51e316a80a832e49668d6cbd58627a5f4
)

FetchContent_MakeAvailable(cppfront)

ADD_EXECUTABLE(cppfront ${cppfront_SOURCE_DIR}/source/cppfront.cpp)

ADD_LIBRARY(cppfront-utils INTERFACE)
TARGET_INCLUDE_DIRECTORIES(cppfront-utils INTERFACE ${cppfront_SOURCE_DIR}/include)

FUNCTION(CPPFRONT TARGET)
    SET(SOURCE "")
    SET(DEPENDENCIES "")
    CMAKE_PARSE_ARGUMENTS(CPPFRONT_ARGS "" "" "FILES;EXTRA_ARGS" ${ARGN})

    FOREACH(FILE IN LISTS CPPFRONT_ARGS_FILES)
        SET(INPUT ${CMAKE_CURRENT_SOURCE_DIR}/${FILE})

        GET_FILENAME_COMPONENT(INPUT_EXTENSION ${FILE} EXT)
        IF(${INPUT_EXTENSION} MATCHES ".*\.cpp2$")
            STRING(REPLACE ".cpp2" ".cpp" OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${FILE})
        ELSEIF(${INPUT_EXTENSION} MATCHES ".*\.h2$")
            STRING(REPLACE ".h2" ".h" OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${FILE})
            SET(${TARGET}_INCLUDE "${CMAKE_CURRENT_BINARY_DIR}" PARENT_SCOPE)
            SET(DEPENDENCIES "${DEPENDENCIES}" "${OUTPUT}")
        ELSE()
            MESSAGE(FATAL_ERROR "Unhandled extension: '${INPUT_EXTENSION}'")
        ENDIF()

        MESSAGE(DEBUG "cppfront ${INPUT} -o ${OUTPUT} ${CPPFRONT_ARGS_EXTRA_ARGS}")

        ADD_CUSTOM_COMMAND(
            OUTPUT "${OUTPUT}"
            COMMAND cppfront ${INPUT} -o ${OUTPUT} ${CPPFRONT_ARGS_EXTRA_ARGS}
            DEPENDS cppfront "${INPUT}"
            VERBATIM
        )

        SET(SOURCE "${SOURCE}" "${OUTPUT}")
    ENDFOREACH()

    ADD_CUSTOM_TARGET(
        ${TARGET}_DEPENDENCIES
        DEPENDS ${DEPENDENCIES}
    )

    SET(${TARGET}_SOURCE ${SOURCE} PARENT_SCOPE)

ENDFUNCTION()

FUNCTION(ADD_LIBRARY2 TARGET)

    CMAKE_PARSE_ARGUMENTS(ADD_LIBRARY2_ARGS "" "" "FILES;EXTRA_ARGS" ${ARGN})

    CPPFRONT(${TARGET}
        FILES ${ADD_LIBRARY2_ARGS_FILES}
        EXTRA_ARGS ${ADD_LIBRARY2_ARGS_EXTRA_ARGS}
    )

    ADD_LIBRARY(${TARGET} INTERFACE)
    ADD_DEPENDENCIES(${TARGET} ${TARGET}_DEPENDENCIES)
    TARGET_INCLUDE_DIRECTORIES(${TARGET} INTERFACE ${${TARGET}_INCLUDE})
    TARGET_LINK_LIBRARIES(${TARGET} INTERFACE cppfront-utils)

ENDFUNCTION()

FUNCTION(ADD_EXECUTABLE2 TARGET)

    CMAKE_PARSE_ARGUMENTS(ADD_LIBRARY2_ARGS "" "" "FILES;EXTRA_ARGS" ${ARGN})

    CPPFRONT(${TARGET}
        FILES ${ADD_LIBRARY2_ARGS_FILES}
        EXTRA_ARGS ${ADD_LIBRARY2_ARGS_EXTRA_ARGS}
    )

    ADD_EXECUTABLE(${TARGET} ${${TARGET}_SOURCE})
    TARGET_LINK_LIBRARIES(${TARGET} PRIVATE cppfront-utils)

ENDFUNCTION()
